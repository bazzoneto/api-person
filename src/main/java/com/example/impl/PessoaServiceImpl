package com.example.impl;

import com.example.model.Pessoa;
import com.example.repository.PessoaRepository;
import com.example.service.PessoaService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.dao.EmptyResultDataAccessException;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.Optional;

@Service
public class PessoaServiceImpl implements PessoaService {

    @Autowired
    private PessoaRepository repository;

    @Override
    public List<Pessoa> getAll() {
        return repository.findAll();
    }

    @Override
    public Optional<Pessoa> getById(Integer id) {
        return repository.findById(id);
    }

    @Override
    public List<Pessoa> findByNomeIgnoreCaseContainingOrderByNomeAsc(String nome) {
        return repository.findByNomeIgnoreCaseContainingOrderByNomeAsc(nome);
    }

    @Override
    public Pessoa create(Pessoa pessoa) {
        return repository.save(pessoa);
    }

    @Override
    public Pessoa update(Integer id, Pessoa pessoa) {
        return repository.findById(id).map(p -> {
            p.setNome(pessoa.getNome());
            p.setSexo(pessoa.getSexo());
            p.setEmail(pessoa.getEmail());
            p.setDataNascimento(pessoa.getDataNascimento());
            p.setNaturalidade(pessoa.getNaturalidade());
            p.setNacionalidade(pessoa.getNacionalidade());
            p.setCpf(pessoa.getCpf());
            return repository.save(p);
        }).orElseThrow(() -> new EmptyResultDataAccessException(1));
    }

    @Override
    public void delete(Integer id) {
        repository.deleteById(id);
    }

    @Override
    public void deleteAll() {
        repository.deleteAll();
    }
}
